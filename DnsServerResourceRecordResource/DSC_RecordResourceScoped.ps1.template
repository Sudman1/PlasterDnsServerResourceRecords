<#
    .SYNOPSIS
        A DSC Resource for MS DNS Server that represents an SRV resource record.
    .PARAMETER ZoneName
        Specifies the name of a DNS zone. (Key Parameter)
    .PARAMETER ZoneScope
        Specifies the name of a zone scope. (Key Parameter)
<%
    $propertyData = Import-CSV -Path "$PLASTER_PARAM_PropDir/$($PLASTER_PARAM_ResourceRecordType)Props.csv"

    foreach ($paramDef in $propertyData) {
        "    .PARAMETER $($paramDef.Name)"
        if ([string]::IsNullOrEmpty($paramDef.Required)) { $paramDef.Required = "Optional" }
        "       $($paramDef.Description) ($($paramDef.Required) Parameter)"
    }
%>
    .PARAMETER TimeToLive
        Specifies the TimeToLive value of the SRV record. Value must be in valid TimeSpan string format (i.e.: Days.Hours:Minutes:Seconds.Miliseconds or 30.23:59:59.999).
    .PARAMETER DnsServer
        Name of the DnsServer to create the record on.
    .PARAMETER Ensure
        Whether the host record should be present or removed.
#>

$script:localizedDataDnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>Scoped = Get-LocalizedData -DefaultUICulture en-US -FileName 'DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>Scoped.strings.psd1'

[DscResource()]
class DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>Scoped : DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>
{
    [DscProperty(Key)]
    [string] $ZoneScope

    [DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>Scoped] Get()
    {
        return ([DnsRecordBase] $this).Get()
    }

    [void] Set()
    {
        ([DnsRecordBase] $this).Set()
    }

    [bool] Test()
    {
        return ([DnsRecordBase] $this).Test()
    }

    hidden [ciminstance] GetResourceRecord()
    {
        return ([DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>] $this).GetResourceRecord()
    }

    hidden [DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>Scoped] NewDscResourceObjectFromRecord([ciminstance] $record)
    {
        $dscResourceObject = [DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>Scoped] @{
            ZoneName     = $this.ZoneName
            ZoneScope    = $this.ZoneScope
            # Apply values from $record as appropriate below
<%
$propertyData = Import-CSV -Path "$PLASTER_PARAM_PropDir/$($PLASTER_PARAM_ResourceRecordType)Props.csv"

$padsize = [Math]::Max('TimeToLive'.length, ($propertyData.Name | ForEach-Object { $_.length } | Sort-Object -Descending | Select-Object -first 1))

foreach ($paramDef in $propertyData) {
    "            $($paramDef.Name.PadRight($padSize)) = throw 'NewDscResourceObjectFromRecord $($paramDef.Name) property not defined'"
}
%>
            TimeToLive   = $record.TimeToLive.ToString()
            DnsServer    = $this.DnsServer
            Ensure       = 'Present'
        }

        return $dscResourceObject
    }

    hidden [void] AddResourceRecord()
    {
        ([DnsRecord<%= $PLASTER_PARAM_ResourceRecordType %>] $this).AddResourceRecord()
    }
}
